name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  packages: write
  contents: read
  id-token: write


env:
  PROJECT_ID: theta-carving-374101
  GAR_LOCATION: northamerica-northeast2
  REPOSITORY: math-tts
  SERVICE: server
  REGION: northamerica-northeast2 # low carbon!

jobs:
  deploy-and-push:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          # these were set up using the following guide: https://github.com/google-github-actions/auth#setting-up-workload-identity-federation
          # no idea how this is better 
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com
      
      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v2
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # I don't need to keep track of previous versions, so I just use latest
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          region: ${{ env.REGION }}

      - name: Use output
        run: 'curl "${{ steps.deploy.outputs.url }}"'

      - name: ðŸ’š Send Deployment Message on Success
        env:
          TITLE: 'ðŸš€ Server Deployment Successful!'
          DESCRIPTION: '**Repo:** ${{ github.repository }}\n\n**Commit Hash:** ${{ github.sha }}'
          URL: 'https://github.com/${{ github.repository }}/${{ github.sha }}'
        # The backslashes around double quotes are annoying but if I use single quotes, discord will say the JSON is invalid for some reason
        run: |
          curl \
            -H "Content-Type: application/json" \
            -d "{ \"embeds\": [{ \"title\": \"$TITLE\", \"description\": \"$DESCRIPTION\", \"timestamp\": \"$DATE\", \"url\": \"$URL\" }]}" \
            "${{ secrets.DISCORD_WEBHOOK }}"

      - name: ðŸš¨ Send Deployment Message on Failure
        if: ${{ failure() }}
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment failed for commit ${{ github.sha }}!"
